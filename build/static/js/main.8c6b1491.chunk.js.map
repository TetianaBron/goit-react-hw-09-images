{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Layout/Layout.module.css","components/Spinner/Spinner.module.css","components/Layout/Layout.js","components/Searchbar/Searchbar.js","images/No_Image-512.webp","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Spinner/Spinner.js","services/pixabay-api.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css"],"names":["module","exports","Layout","children","className","s","layout","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","tags","clickOnItem","src","Img","alt","onClick","ImageGalleryItemImage","defaultProps","Button","onIncrement","ButtonSection","Spinner","Loader","color","height","width","timeout","api","fetchImg","page","fetch","then","response","json","INAGES_PER_PAGE","modalRoot","document","querySelector","Modal","onClose","image","isLoading","setIsLoading","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","SpinnerCentered","onLoad","ImageGallery","items","setItems","total","setTotal","setError","loading","setLoading","setPage","largeImage","setLargeImage","pixabayAPI","success","prevItems","hits","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","numberOfPages","toggleModal","useCallback","length","map","index","largeImageURL","prevPage","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.8c6b1491.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2UBti\",\"SpinnerCentered\":\"ImageGallery_SpinnerCentered__oCgY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2TgCM\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3y0Tj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2-CRG\",\"ButtonSection\":\"Button_ButtonSection__zXSEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__WQ909\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__OwgWw\"};","import React from 'react';\nimport s from './Layout.module.css';\n\nconst Layout = ({ children }) =>\n    <div className={s.layout}>{children}</div>;\n\nexport default Layout;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\n\r\n\r\nexport default function Searchbar ({onSubmit}) {\r\n \r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleQueryChange = event => setQuery(event.currentTarget.value.toLowerCase() );\r\n  \r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error(\"Введите что-то.\");\r\n      return;\r\n    }\r\n\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n            </button>\r\n\r\n              <input\r\n                 className={s.SearchFormInput}\r\n                 type=\"text\"\r\n                 name=\"query\"\r\n                 value={query}\r\n                 onChange={handleQueryChange}\r\n                 autoComplete=\"off\"\r\n                 autoFocus\r\n                 placeholder=\"Search pictures from Pixabay...\"\r\n              />\r\n           </form>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  Searchbar.propTypes = {\r\n     onSubmit: PropTypes.func,\r\n};","export default __webpack_public_path__ + \"static/media/No_Image-512.6bca87e4.webp\";","import s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport Img from '../../images/No_Image-512.webp';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags, clickOnItem }) => (\r\n    <div className={s.ImageGalleryItem}>\r\n        <img\r\n            src={webformatURL ?  webformatURL : Img}\r\n            alt={tags}\r\n            onClick={clickOnItem}\r\n            className={s.ImageGalleryItemImage} />\r\n    </div>\r\n)\r\n\r\nImageGalleryItem.defaultProps = {\r\n  webformatURL: Img,\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string,\r\n    tags: PropTypes.string.isRequired,\r\n    clickOnItem: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onIncrement }) => (\r\n    <div className={s.ButtonSection}>\r\n        <button type=\"button\" onClick={onIncrement} className={s.Button}>Load more</button>\r\n    </div>\r\n)\r\n\r\nButton.propTypes = {\r\n    onIncrement: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n     <div className={s.Loader}>\r\n        <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#3f51b5\"\r\n            height={80}\r\n            width={80}\r\n            timeout={3000}\r\n        />\r\n     </div>\r\n);\r\n\r\nexport default Spinner;","const INAGES_PER_PAGE = 12;\r\n\r\nfunction fetchImg(query, page) {\r\n  const BASE_URL = 'https://pixabay.com/api';\r\n  const KEY = '19207978-b8cc5d5178f1c84e5ac39b1c7';\r\n  \r\n    return fetch(`${BASE_URL}/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${INAGES_PER_PAGE}`)\r\n    .then(response => response.json())\r\n}\r\n\r\nconst api = {\r\n  fetchImg,\r\n  INAGES_PER_PAGE\r\n};\r\n\r\nexport default api;","import React, { useState, useEffect } from 'react';\r\nimport s from './Modal.module.css';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Img from '../../images/No_Image-512.webp';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal ({ onClose, image}) {\r\n    const { src, alt } = image;\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n          const handleKeyDown = e => {\r\n            if (e.code === 'Escape') {\r\n            onClose();\r\n            }\r\n          }\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n             window.removeEventListener('keydown', handleKeyDown);\r\n        }\r\n    }, [onClose]);\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    }\r\n    const onLoad = () => {\r\n        setIsLoading(false);\r\n    }\r\n        \r\n    return createPortal(\r\n            <>\r\n            <div className={s.Overlay} onClick={handleBackdropClick}>\r\n                <div className={s.Modal}>\r\n                         \r\n                        {isLoading && (\r\n                            <div className={s.SpinnerCentered}>\r\n                                <Spinner />\r\n                            </div>)}\r\n                        \r\n                    <img\r\n                        onLoad={onLoad}\r\n                        src={src ? src : Img}\r\n                        alt={alt} />\r\n                </div>\r\n            </div>\r\n            </>,\r\n            modalRoot);\r\n}\r\n\r\nModal.propTypes = {\r\n    image: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n};","import { useState, useEffect, useCallback } from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport pixabayAPI from '../../services/pixabay-api';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport default function ImageGallery() {\r\n    const [query, setQuery] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [total, setTotal] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [largeImage, setLargeImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!query) {\r\n        return;\r\n        }\r\n\r\n        const fetch = (query) => {\r\n            setLoading(true);\r\n\r\n            pixabayAPI\r\n                .fetchImg(query, page)\r\n                .then((items) => {\r\n                    if (items.total === 0) {\r\n                        toast.error(`${query} is not found. Try another one!`);\r\n                    } else if (page === 1) {\r\n                        toast.success(`${items.total} pictures is found.`)\r\n                    }\r\n                    setItems(prevItems => [...prevItems, ...items.hits]);\r\n                    setTotal(items.total);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    setError(error.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                    window.scrollTo({\r\n                        top: document.documentElement.scrollHeight,\r\n                        behavior: 'smooth',\r\n                    });\r\n                });\r\n        };\r\n\r\n       fetch(query);\r\n    }, [page, query]);\r\n\r\n    \r\n    const numberOfPages = total / pixabayAPI.INAGES_PER_PAGE;\r\n\r\n    const updatePage = () => {\r\n        setPage(prevPage => prevPage + 1);\r\n    };\r\n    \r\n    const onChangeQuery = (query) => {\r\n        setQuery(query);\r\n        setPage(1);\r\n        setItems([]);\r\n        setError(null);\r\n    };\r\n\r\n    const toggleModal = useCallback(() => {\r\n        setLargeImage(null);\r\n    }, []);\r\n    \r\n    const  handleGalleryItemClick = (src, alt) => {\r\n        setLargeImage({ src, alt });\r\n    }\r\n\r\n        return (\r\n            <>\r\n            <Searchbar onSubmit={onChangeQuery} />\r\n            {items.length > 0 &&\r\n                (<ul className={s.ImageGallery}>\r\n                {items.map(({ webformatURL, largeImageURL, tags }, index) => (\r\n                        <li key={index}>\r\n                          <ImageGalleryItem\r\n                              webformatURL={webformatURL}\r\n                              largeImageURL={largeImageURL}\r\n                              tags={tags}\r\n                              clickOnItem={() => handleGalleryItemClick(largeImageURL, tags)} />\r\n                        </li>))}\r\n                    </ul>)}\r\n                \r\n            {loading && page === 1 && (\r\n                            <div className={s.SpinnerCentered}>\r\n                                <Spinner />\r\n                    </div>)}\r\n                \r\n            {loading && page !== 1 && <Spinner />}\r\n                                \r\n            {largeImage &&\r\n                (<Modal\r\n                        image={largeImage}\r\n                        onClose={toggleModal}\r\n                    />)}\r\n                            \r\n            {page < numberOfPages && !loading && (<Button onIncrement={updatePage} />)}\r\n        </>\r\n        )    \r\n    }\r\n\r\n            \r\nImageGallery.propTypes = {\r\n    query: PropTypes.string,\r\n};","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Layout from './components/Layout/Layout';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n\nexport default function App() {\n        return (\n            <Layout>\n                <ImageGallery />\n                <ToastContainer />\n            </Layout>\n        );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />, document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2AXBZ\",\"SearchForm\":\"Searchbar_SearchForm__DcCqc\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3K_G9\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1i8NF\",\"SearchFormInput\":\"Searchbar_SearchFormInput__ptrCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__eNFuD\",\"Modal\":\"Modal_Modal__jLnWe\",\"SpinnerCentered\":\"Modal_SpinnerCentered__3OQLK\"};"],"sourceRoot":""}